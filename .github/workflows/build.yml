name: Build Extension

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

# Add explicit permissions block
permissions:
  contents: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "yarn"

      - name: Install Node.js dependencies
        run: yarn install

      - name: Build and package extensions
        run: yarn package

      - name: List build artifacts for debugging
        run: |
          echo "Chrome artifacts:"
          find dist/chrome -type f
          echo "Firefox artifacts:"
          find dist/firefox -type f

      - name: Install Chrome extension packaging tools
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip xvfb
          curl -L -o chrome-linux.zip https://storage.googleapis.com/chrome-for-testing-public/122.0.6261.94/linux64/chrome-linux64.zip
          unzip -q chrome-linux.zip
          echo '{"extensions": {"settings": {"extension-id": {"location": "unpacked"}}}}' > prefs.json

      - name: Package Chrome extension as CRX
        run: |
          mkdir -p dist/chrome
          # Generate a key for CRX packaging
          openssl genrsa 2048 | openssl pkcs8 -topk8 -nocrypt -out key.pem

          # Use Chrome to package the extension
          xvfb-run ./chrome-linux64/chrome \
            --pack-extension=build/chrome \
            --pack-extension-key=key.pem \
            --no-sandbox

          # Move the CRX file to dist directory
          mv build/chrome.crx dist/chrome/mindshield.crx

      - name: Upload Chrome extension artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mindshield-chrome
          path: |
            dist/chrome/*.zip
            dist/chrome/*.crx

      - name: Upload Firefox extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: mindshield-firefox
          path: dist/firefox/*.zip

      - name: Create Release
        id: create_release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: |
            dist/chrome/mindshield.crx
            dist/chrome/*.zip
            dist/firefox/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
